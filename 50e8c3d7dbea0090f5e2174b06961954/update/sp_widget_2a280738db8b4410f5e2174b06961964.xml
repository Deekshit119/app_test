<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function(spModal, $scope, $rootScope, $location, $timeout, spUtil, spAriaFocusManager, $uibModalStack) {
//function(spModal, spAriaUtil, $scope, $rootScope, $location, $timeout, spUtil, spAriaFocusManager, $uibModalStack, nowAttachmentHandler) {
  var c = this;

  var closeButton = document.getElementsByClassName('close pull-right');
	for (var iClose = 0; iClose < closeButton.length; iClose++) {
		closeButton[iClose].style.display = 'none';
	}
	
	var IsuserID = (c.data.uId == '8a21e682dbb6ff80bbe25c88f4961984');
	$scope.errorMessages = [];

	$scope.setchanged = 'false';
	c.data.setchanged = 'false';
	$scope.expline_sysid = c.data.expline_sysid;
	$scope.valCodeloga = c.data.codeloga[0].code;
	
	var year= c.data.date.substr(6, 4);
	var month= c.data.date.substr(3, 2);
	var day= c.data.date.substr(0, 2);
	$scope.expDate = new Date(year,month-1,day);
	var previousDate = new Date(year,month-1,day);
	
	$scope.location_from = {
	displayValue: c.data.items[0].expline_location,
	value: c.data.LocationFromId,
	name: 'location_from'
	};

	$scope.location_to = {
	displayValue: c.data.items[0].expline_travelkm,
	value: c.data.LocationToId,
	name: 'location_to'
	};

	$scope.Rubric = {
	displayValue: c.data.items[0].expline_rubric,
	value: c.data.RubricId,
	name: 'Rubric'
	};
	
	$scope.expOpenBy = '' || c.data.items[0].expsheet_opened_by;
	$scope.expReqFor = '' || c.data.items[0].expsheet_requested_for;
	$scope.expContract = '' || c.data.items[0].expsheet_contract;
	$scope.expDesc = '' || c.data.items[0].expsheet_short_description;
	$scope.expAmount = parseFloat(c.data.items[1].expline_requested_amount).toFixed(2);

	if(''+c.data.items[0].expline_other_location_to == '') {
		$scope.expOtherLoc = '' || c.data.items[0].expline_location;
		$scope.expOtherLocTo = '' || c.data.items[0].expline_other_location;
	}
	else {
		$scope.expOtherLoc = '' || c.data.items[0].expline_other_location;
		$scope.expOtherLocTo = '' || c.data.items[0].expline_other_location_to;
	}
	$scope.CategDivers = '' || c.data.items[0].expline_miscellaneous_account_code;
	c.data.CategDiversNbChar = $scope.CategDivers.trim().length;
	
	$scope.$on("field.change", function(evt, parms) {
		$scope.SetChangeTrue();
	});	
	
	function Control() {
		if (IsuserID) {

			//console.log('scope.expOtherLoc:'+$scope.expOtherLoc);
		}
		
		if(c.data.codeloga[0].code=='79C' || c.data.codeloga[0].code=='809') {
				if($scope.location_from.value != '' && $scope.location_from.value != null && $scope.location_to.value != null && $scope.location_to.value != '' ){ //&& (document.getElementById('expOtherLoc').value == '')){
					if($scope.Rubric.value == 'fbc37b13dbee0090f5e2174b06961948' || $scope.Rubric.value == '9805f444db44149009b962a916961908')
						document.getElementById('expOtherLoc').value = '';
						
					document.getElementById('expReqValue').readOnly = true;
					document.getElementById('labelReqValue').style.color = 'black';
					document.getElementById('labelOtherLoc').style.color = 'black';
					document.getElementById('labelLocFrom').style.color = 'black';
					document.getElementById('labelLocTo').style.color = 'black';
					$scope.setchanged = 'getNbKm';
					c.data.setchanged = 'getNbKm';
					c.data.location_from = $scope.location_from;
					c.data.location_to = $scope.location_to;
					c.server.update().then(function(data){
					if(data.retour_action=='KMKO') {
						spModal.open({
							title: '${expense.modal.warning}',
							message: "${expense.invalid_from_to_location}",
							buttons: [
								{label:'OK', primary: true}
							],
							backdrop: 'static'
						}).then(function() {
								// true or false
								c.data.location_to.value = null;
								c.data.setchanged = 'false';
								$scope.setchanged = 'false';
								Control();
							});
						}
						else {
								c.data.expline_requested_value = data.expline_requested_value;
								$scope.setchanged = 'true';
								c.data.setchanged = 'true';
							}
					});
					spUtil.update($scope);
			}
				else if($scope.Rubric.value != 'e8e4b084db44149009b962a916961906' && $scope.Rubric.value != 'edc49704dbd3c050f5e2174b06961901') {
					if($scope.Rubric.value != 'fbc37b13dbee0090f5e2174b06961948' && $scope.Rubric.value != '9805f444db44149009b962a916961908') document.getElementById('expOtherLoc').readOnly = false;
					document.getElementById('expReqValue').readOnly = false;
					if(($scope.location_from.value == '' || $scope.location_from.value == null) && ($scope.location_to.value == null || $scope.location_to.value == ''))// && (document.getElementById('expOtherLoc').value == ''))
					{
						//document.getElementById('labelOtherLoc').style.color = 'red';
						document.getElementById('labelLocFrom').style.color = 'red';
						document.getElementById('labelLocTo').style.color = 'red';
						document.getElementById('labelReqValue').style.color = 'red';
						c.data.setchanged = 'invalid';
						$scope.setchanged = 'invalid';
					}
					else if(($scope.location_from.value == '' || $scope.location_from.value == null) && ($scope.location_to.value == null || $scope.location_to.value == ''))// && (document.getElementById('expOtherLoc').value != ''))
					{
						if($scope.Rubric.value != 'fbc37b13dbee0090f5e2174b06961948' && $scope.Rubric.value != '9805f444db44149009b962a916961908') document.getElementById('labelOtherLoc').style.color = 'black';
						document.getElementById('labelLocFrom').style.color = 'black';
						document.getElementById('labelLocTo').style.color = 'black';
						document.getElementById('expReqValue').readOnly = false;
						c.data.setchanged = 'invalid';
						$scope.setchanged = 'invalid';
					}
					else if(($scope.location_from.value != '' && $scope.location_from.value != null) && ($scope.location_to.value == null || $scope.location_to.value == ''))// && (document.getElementById('expOtherLoc').value == ''))
					{
						if($scope.Rubric.value != 'fbc37b13dbee0090f5e2174b06961948' && $scope.Rubric.value != '9805f444db44149009b962a916961908') document.getElementById('labelOtherLoc').style.color = 'red';
						document.getElementById('labelLocFrom').style.color = 'black';
						document.getElementById('labelLocTo').style.color = 'red';
						document.getElementById('expReqValue').readOnly = false;
						c.data.setchanged = 'invalid';
						$scope.setchanged = 'invalid';
					}
					else if(($scope.location_to.value != '' && $scope.location_to.value != null) && ($scope.location_from.value == null || $scope.location_from.value == ''))// && (document.getElementById('expOtherLoc').value == ''))
					{
						if($scope.Rubric.value != 'fbc37b13dbee0090f5e2174b06961948' && $scope.Rubric.value != '9805f444db44149009b962a916961908') document.getElementById('labelOtherLoc').style.color = 'red';
						document.getElementById('labelLocFrom').style.color = 'red';
						document.getElementById('labelLocTo').style.color = 'black';
						document.getElementById('expReqValue').readOnly = false;
						c.data.setchanged = 'invalid';
						$scope.setchanged = 'invalid';
					}
					
					if(document.getElementById('expReqValue').value == 0 || document.getElementById('expReqValue').value=='' || document.getElementById('expReqValue').value == null) {
						document.getElementById('labelReqValue').style.color = 'red';
						c.data.setchanged = 'invalid';
						$scope.setchanged = 'invalid';
					}
					else {
						document.getElementById('labelReqValue').style.color = 'black';
						c.data.setchanged = 'true';
						$scope.setchanged = 'true';
					}
				}

				// If field expOtherLoc (Autre Lieu) filled :
				// 1. set location_from & location_to fields to read only
				// 2. set value to '' ?
			  if($scope.Rubric.value == 'e8e4b084db44149009b962a916961906' || $scope.Rubric.value == 'edc49704dbd3c050f5e2174b06961901') {
						if($scope.Rubric.value != 'fbc37b13dbee0090f5e2174b06961948' && $scope.Rubric.value != '9805f444db44149009b962a916961908') {
							c.data.setchanged = 'true';
							$scope.setchanged = 'true';
														
							if(document.getElementById('expOtherLocTo').value!='') document.getElementById('labelOtherLocTo').style.color = 'black'; else document.getElementById('labelOtherLocTo').style.color = 'red';
							if(document.getElementById('expOtherLoc').value!='') document.getElementById('labelOtherLoc').style.color = 'black'; else document.getElementById('labelOtherLoc').style.color = 'red';
							if(document.getElementById('expReqValue').value!='') document.getElementById('labelReqValue').style.color = 'black'; else document.getElementById('labelReqValue').style.color = 'red';
							
							if(document.getElementById('expReqValue').value=='' || document.getElementById('expOtherLocTo').value=='' || document.getElementById('expOtherLoc').value=='' || document.getElementById('expReqValue').value=='0') {
								c.data.setchanged = 'invalid';
								$scope.setchanged = 'invalid';
							}
					}
			}
		}
		
		if (c.data.codeloga[0].code=='800' && $scope.Rubric.value == 'fbc37b13dbee0090f5e2174b06961949') { //Rubrique Loga Frais de repas dans le canton
			var iMontantIn = 0;
			var iMontantMaxIn = 0;
			var dDateCheckIn = new Date('08/01/2020');
			if (dDateCheckIn >	$scope.expDate) {
				iMontantMaxIn =  parseFloat('18');
			}
			else {
				iMontantMaxIn =  parseFloat('25');
			}

			var boolMontantInNaN = isNaN(parseFloat(document.getElementById('expReqAmount').value));
				if(!boolMontantInNaN) {
					iMontantIn = parseFloat(document.getElementById('expReqAmount').value);
				}
				if(iMontantIn > iMontantMaxIn || iMontantIn <= 0){
					var msgTitre_1 = "";
					if (iMontantMaxIn==18) 
						msgTitre_1 = "${expense.rubric_meal_in.amount.control}";
					else
						msgTitre_1 = "${expense.rubric_meal_in.amount.control_25}";
					
					spModal.open({
						title: '${expense.modal.warning}',
						message: msgTitre_1, //"${expense.rubric_meal_in.amount.control}",
						buttons: [
							{label:'OK', primary: true}
						],
						backdrop: 'static'
					}).then(function() {
						// true or false
						if(iMontantIn > iMontantMaxIn) {
							document.getElementById('expReqAmount').value = iMontantMaxIn;
							c.data.setchanged = 'true';
							$scope.setchanged = 'true';
						}
						else if(iMontantIn <=0)  {
							document.getElementById('expReqAmount').value = '';
							c.data.setchanged = 'invalid';
							$scope.setchanged = 'invalid';
						}
						//Control();
					});
				}
			}
		
		if (c.data.codeloga[0].code=='800' && $scope.Rubric.value == 'bfc37b13dbee0090f5e2174b06961949') { //Rubrique Loga Frais de repas hors canton
			var iMontantOut = 0;
			var iMontantMaxOut = 0;
			var dDateCheckOut = new Date('08/01/2020');
			if (dDateCheckOut >	$scope.expDate) {
				iMontantMaxOut = parseFloat('23');
			}
			else {
				iMontantMaxOut = parseFloat('30');
			}
				var boolMontantOutNaN = isNaN(parseFloat(document.getElementById('expReqAmount').value));
				if(!boolMontantOutNaN) {
					iMontantOut = parseFloat(document.getElementById('expReqAmount').value);
				}
				if(iMontantOut > iMontantMaxOut || iMontantOut <= 0){
					var msgTitre_2 = "";
					if (iMontantMaxOut==23) 
						msgTitre_2 = "${expense.rubric_meal_out.amount.control}";
					else
						msgTitre_2 = "${expense.rubric_meal_out.amount.control_30}";

					spModal.open({
						title: '${expense.modal.warning}',
						message: msgTitre_2, //"${expense.rubric_meal_out.amount.control}",
						buttons: [
							{label:'OK', primary: true}
						],
						backdrop: 'static'
					}).then(function() {
						// true or false
						if(iMontantOut > iMontantMaxOut) {
							document.getElementById('expReqAmount').value = iMontantMaxOut;
							c.data.setchanged = 'true';
							$scope.setchanged = 'true';
						}
						else if(iMontantOut <=0)  {
							document.getElementById('expReqAmount').value = '';
							c.data.setchanged = 'invalid';
							$scope.setchanged = 'invalid';
						}
						//Control();
					});
				}
			}
		
		if (c.data.codeloga[0].code=='855') { //Rubrique Connexion Internet
			document.getElementById('expReqAmount').value = 25;
			document.getElementById('expReqAmount').readOnly = true;
			c.data.setchanged = 'true';
			$scope.setchanged = 'true';
			//Control();
		}

		if (c.data.codeloga[0].code == '800' && $scope.Rubric.value == "3eae6cd5db831c50011e177e16961978") { //Rubrique Petit-déjeuner
			document.getElementById('expReqAmount').value = 7;
			document.getElementById('expReqAmount').readOnly = true;
			c.data.setchanged = 'true';
			$scope.setchanged = 'true';
			//Control();
		}
	}
	
	$scope.SetChangeTrue = function () {
		var sDate = new Date($scope.expDate);
		var dFinalDate = document.getElementById('expDate').value;
		var year= dFinalDate.substr(0, 4);
		var month= dFinalDate.substr(5, 2);
		var day= parseInt(dFinalDate.substr(8, 2));
		dFinalDate = day+'.'+month+'.'+year;

		var todayDate = new Date(); //Today Date
		var sMsgDate =  ''+c.data.msgDateInvalid;
		var sMsgError = sMsgDate.replace('{0}',dFinalDate);
		if(sDate>todayDate) {

			spModal.open({
				title: '${expense.modal.warning}',
				message: sMsgError,
				buttons: [
					{label:'OK', primary: true}
				],
				backdrop: 'static'
			}).then(function() {
				// true or false
				$scope.setchanged = 'false';
				c.data.setchanged = 'false';
				$scope.expDate = previousDate;
			  document.getElementById('save_expline').style.visibility = "hidden";
			});
			
			return;
		}
				
		$scope.setchanged = 'true';
		Control();
/*
		if($scope.setchanged=='true') {
			document.getElementById('save_expline').style.visibility = "visible";
		}
		else {
			document.getElementById('save_expline').style.visibility = "hidden";
		}
*/
	};
	
	$scope.buttonSaveExpenseEdit = function () {
		var dFinalDate = document.getElementById('expDate').value;
		var year= dFinalDate.substr(0, 4);
		var month= dFinalDate.substr(5, 2);
		var day= parseInt(dFinalDate.substr(8, 2));
		dFinalDate = year+'-'+month+'-'+day; 

		var fexpValue = 0;
		var fexpAmount = 0;
		var bexpAmount=false;
		var bexpValue=false;
		var bisDuplicated = false;

		if(c.data.codeloga[0].code=='79C' || c.data.codeloga[0].code=='809') {
			bexpValue = isNaN(parseFloat(document.getElementById('expReqValue').value));
			fexpValue = (!bexpValue ? parseFloat(document.getElementById('expReqValue').value) : 0);
			bexpAmount = isNaN(parseFloat(c.data.expline_requested_amount));
			fexpAmount = (!bexpAmount ? parseFloat(c.data.expline_requested_amount) : 0);
		}
		else {
			bexpAmount = isNaN(parseFloat(document.getElementById('expReqAmount').value));
			fexpAmount = (!bexpAmount ? parseFloat(document.getElementById('expReqAmount').value) : 0);
		}
		var sDuplicate ='true' + c.data.codeloga[0].sys_id + dFinalDate + fexpValue + fexpAmount + c.data.uId;
		for(iDup=0; iDup < c.data.arrDuplicated.length; iDup++ ) {
			if(c.data.arrDuplicated[iDup] == sDuplicate) {
				 bisDuplicated = true;
				 }
		}
				
		if(bisDuplicated) {
			spModal.open({
				title: '${expense.modal.warning}',
				message: '${expense.duplicates.records}',
				backdrop: 'static'
			}).then(function() {
				$scope.setchanged = 'true';
				c.data.setchanged = 'true';
				doSave();
			} , function() {
				$scope.setchanged = 'false';
				c.data.setchanged = 'false';
			});

		 return;
		}
		else {
			doSave();
		}
	}
	
function doSave() {		
		c.data.CodeLogaValeur = c.data.codeloga[0].code;
		if($scope.Rubric.value == 'e8e4b084db44149009b962a916961906' || $scope.Rubric.value == 'edc49704dbd3c050f5e2174b06961901') {
			c.data.expOtherLoc = document.getElementById('expOtherLoc').value;
			c.data.expOtherLocTo = document.getElementById('expOtherLocTo').value;
		}

		c.data.expDesc = document.getElementById('expDesc').value;
		if((c.data.codeloga[0].code=='79C' && $scope.Rubric.value == 'fbc37b13dbee0090f5e2174b06961948') || (c.data.codeloga[0].code=='809' && $scope.Rubric.value == '9805f444db44149009b962a916961908'))  {
			c.data.expReqValue = document.getElementById('expReqValue').value;
			c.data.location_from = $scope.location_from.value;
			c.data.location_to = $scope.location_to.value;
		}
		else if((c.data.codeloga[0].code=='79C' && $scope.Rubric.value != 'fbc37b13dbee0090f5e2174b06961948') || (c.data.codeloga[0].code=='809' && $scope.Rubric.value != '9805f444db44149009b962a916961908')){
			c.data.expReqValue = document.getElementById('expReqValue').value;
			c.data.location_from = $scope.location_from.value;
			c.data.location_to = '';
			$scope.location_to.value='';
		}
		else {
			c.data.expReqAmount = document.getElementById('expReqAmount').value;
		}
		c.data.expDate = $scope.expDate;

		if(document.getElementById('setchanged').value == 'invalid') {
						spModal.open({
							title: '${expense.modal.warning}',
							message: "${expense.edit.message.invalid_form}",
							buttons: [
								{label:'OK', primary: true}
							],
							backdrop: 'static'
						}).then(function() {
								// true or false
								c.data.setchanged = 'false';
								$scope.setchanged = 'false';
								Control();
							});
		}
		else if($scope.setchanged == 'true') {
			$scope.setchanged = 'true';
			c.data.setchanged = 'true';

			c.server.update().then(function(){
				$rootScope.$broadcast('execRefresh', 'saved');
				$uibModalStack.dismissAll();
			});
		}
		else {
				$uibModalStack.dismissAll();
		}
	}
	
	$scope.buttonCloseExpenseEdit = function () {
		if($scope.setchanged == 'true') {
			  var tmpVal = 'true';
        spModal.open({
            title: '${expense.modal.leave}',
            message: "${expense.leave.title_message}",
						backdrop: 'static'
        }).then(function() {
				  c.data.setchanged = 'DELPENDING';
					c.server.update().then(function(data){
				  $uibModalStack.dismissAll();
        }, function() {
						c.data.setchanged = tmpVal;
					});
				})
    }
		else $uibModalStack.dismissAll();
	};
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.widget-data-table .clearfix{ 
	display: none; 
} 

.close {
    display: none;
}

.pointer {
    cursor: pointer;
}

.v5001b062d7101200b0b044580e6103eb .sp-list-cell {
    white-space: pre-wrap;
}

.user-profile-tabs { 
  height: 60px; 
   
  .widget-header { 
    padding-bottom: 10px; 
    font-weight: normal; 
    color : $brand-primary;
  } 
 
  .no-padding { 
    padding-left : 0px; 
    text-align: center; 
    cursor: pointer; 
 
  } 
 
  .tab-row { 
    margin-top: 15px; 
  } 
} 
 
.widget-tabs { 
  border-bottom: 1px solid $csm-border-color;
  margin-bottom: 15px; 
} 
.widget-tabs { 
  border-bottom: 1px solid $csm-border-color;
} 

.tr-top {
  border-top: 1px solid #ddd;
}

.th-exp-title {
    color: #b92d33;
    display: inline-block;
}

.td_img {
		width: 20px;
  	height: 20px;
  	display: inline-block;
}

.thead {
    border-bottom: 1px solid #ddd;
    border-left: 1px solid #ddd;
    border-right: 1px solid #ddd;
    border-top: 1px solid #ddd;
}

h4 { 
  padding-left: 0px; 
  margin-bottom: 0px; 
} 
 
h4.selected-tab { 
  /*border-bottom: 2px solid #278EFC; */
  border-bottom: 2px solid $brand-primary; 
  color: $link-color;
} 

.btn_expense {
    display: inline-block;
    margin-bottom: 0;
    font-weight: normal;
    text-align: center;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none;
    border: 1px solid transparent;
    white-space: nowrap;
    padding: 6px 12px;
    font-size: 14px;
    line-height: 1.42857;
    border-radius: 4px;
}

.pull-right_expense {
    float: right;
}

.btn_expense-primary_save {
    color: #ffffff;
  	background-color: $primary; //#5bb914;
    border-color: #508c23;
}
 
.btn_expense-primary_close {
    color: #ffffff;
    background-color: #b92d33;
    border-color: #a4282d;
}
 
.profile-tabs { 
  clear: both; 
  padding-bottom: 15px; 
} 

.td-alignmiddle {
	vertical-align:middle;
}
  
.panel-heading{
 background-color : $panel-primary; // #088A08; 
}
.expense-panel-primary {
    border-color:  $panel-primary; //#088A08;
    width: 1585px;
}

.btn-padding-expense{
  padding-right: 15px; 
}

span.panel-title{
 color: $panel-default-heading-bg;
 /*vertical-align: sub;
  vertical-align: -webkit-baseline-middle;*/
}

.panel-heading &gt; .dropdown .dropdown-toggle {
   color: $panel-primary-text;
   /*padding-bottom: 0px;
   vertical-align: bottom;*/
}

.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;

  /* Position the tooltip */
  position: absolute;
  z-index: 1;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>hvs_widget_expense</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>hvs_widget_expense</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
 
	data.uId = gs.getUserID();
 // code for internal testing within Editor
 // input=[];
 // input.sys_id=['4f86f02cdbd79810f5e2174b069619db'];
 // end of code for internal testing
	
	if(input) {
		if(input.sys_id && input.setchanged != 'true'  && input.setchanged != 'getNbKm' ) {
			data.valCodeloga='';
			data.items = getCatalogItems();
			data.expline_sysid = input.sys_id;
			data.setchanged = 'false';
		}
	}

	if(input)  {
		if(input.setchanged && input.setchanged=='DELPENDING')  {
			var scDelPendingEXPLine = new GlideRecord('x_hdvi2_expense_line');
				scDelPendingEXPLine.addEncodedQuery("status=5");
				scDelPendingEXPLine.query();
				while (scDelPendingEXPLine.next()) { 
					scDelPendingEXPLine.status=-1;
					scDelPendingEXPLine.active=false;
					scDelPendingEXPLine.comments="annulation copie remboursement de frais existant / Stornierungskopie Erstattung bestehender Gebühren";
					scDelPendingEXPLine.update();
				}

			var scDelPendingEXPSheet = new GlideRecord('x_hdvi2_expense_sheet');
				scDelPendingEXPSheet.addEncodedQuery("status=5");
				scDelPendingEXPSheet.query();
				while (scDelPendingEXPSheet.next()) { 
					scDelPendingEXPSheet.status=-1;
					scDelPendingEXPSheet.active=false;
					scDelPendingEXPSheet.comments="annulation copie remboursement de frais existant / Stornierungskopie Erstattung bestehender Gebühren";
					scDelPendingEXPSheet.update();
				}
		}
		
		if(input.setchanged && input.setchanged=='getNbKm')  {
				var valKm = -1;
				var grTravelKM = new GlideRecord('x_hdvi2_expense_expense_travel_km');

				grTravelKM.addQuery('locations',input.location_from.displayValue);
				grTravelKM.addQuery('to',input.location_to.displayValue);
				grTravelKM.query();

				while (grTravelKM.next()) {
					valKm = parseFloat(grTravelKM.getValue('km'));
				}

				if(valKm==-1 || valKm==0) {
					gs.info('recheche km ');
					var grTravelKM2 = new GlideRecord('x_hdvi2_expense_expense_travel_km');
					grTravelKM2.addQuery('to',input.location_from.displayValue);
					grTravelKM2.addQuery('locations',input.location_to.displayValue);
					grTravelKM2.query();
					while (grTravelKM2.next()) {
						valKm = parseFloat(grTravelKM2.getValue('km'));
					}
				}


				if(valKm != -1 && valKm != 0) {
					data.expline_requested_value = valKm;
					data.retour_action = 'OK';
				}
				else {
					data.expline_requested_value = 0;
					data.retour_action = 'KMKO';
				}
		}
	
		if(input.setchanged && input.setchanged=='true')  {
				var expParent ='';
				var scSubmit = new GlideRecord('x_hdvi2_expense_line');
				scSubmit.addQuery("sys_id",input.expline_sysid);
				scSubmit.query();
				if(scSubmit.next()) {

				var year= input.expDate.substr(0, 4);
				var month= input.expDate.substr(5, 2);
				var day= parseInt(input.expDate.substr(8, 2))+1;
				var dFinalDate = day+'.'+month+'.'+year;

				expParent =scSubmit.expense;
				scSubmit.date_expense=dFinalDate;
				scSubmit.other_location=input.expOtherLoc;
				scSubmit.other_location_to=input.expOtherLocTo;
				scSubmit.requested_amount=input.expReqAmount;
				scSubmit.requested_value=input.expReqValue;
				scSubmit.refunded_value=input.expReqValue;
				scSubmit.status=0; //1;
				scSubmit.description = input.expDesc;

					if(input.CodeLogaValeur && input.CodeLogaValeur=='79C'){
					//scSubmit.location=document.getElementById('location_from').value;
					//scSubmit.travelkm=document.getElementById('location_to').value;

					if(typeof(input.location_from)!=='undefined') scSubmit.location=input.location_from;
						else scSubmit.location_from='';
					if(typeof(input.location_to)!=='undefined') scSubmit.travelkm=input.location_to;
						else scSubmit.travelkm='';

				}

					scSubmit.update();
				}

				var scSubExp = new GlideRecord('x_hdvi2_expense_sheet');
				scSubExp.addQuery("sys_id",expParent);
				scSubExp.query();
				if(scSubExp.next()) {
					scSubExp.short_description = input.expDesc;
					scSubExp.status=0; //1;
					scSubExp.update();
				}
		}	
	}
	
	var filterRubric = '';

	function getCatalogItems() {
		var sc = new GlideRecord('x_hdvi2_expense_view');
		sc.addQuery('expline_sys_id',input.sys_id);
		sc.query();
		
		var results = [];
		while (sc.next()) {
			if (!$sp.canReadRecord(sc))
				continue;

		var ticketConversationOptions = {};
		ticketConversationOptions.sys_id = sc.getValue('expline_expense');
		ticketConversationOptions.table  = 'x_hdvi2_expense_sheet';
		ticketConversationOptions.record_id = sc.getValue('expline_expense');
		ticketConversationOptions.record_table  = 'x_hdvi2_expense_sheet';
		ticketConversationOptions.readonly = ''+input.read_only;
		ticketConversationOptions.record_only = ''+input.read_only;
		data.Attachment = $sp.getWidget('widget-expense-ticket-attachments', ticketConversationOptions);
		
			var item = {};
			//$sp.getRecordDisplayValues(item, sc, 'expline_sys_id,expsheet_contract,expsheet_number,expline_date_expense,expsheet_short_description,expsheet_opened_by,expsheet_requested_for,expsheet_contract,expline_rubric,expsheet_category,expline_status,expline_requested_amount,expline_requested_value,expline_currency,expline_location,expline_travelkm,expline_other_location,expsheet_category,expline_expense');
			$sp.getRecordDisplayValues(item, sc, 'expline_sys_id,expsheet_contract,expsheet_number,expline_date_expense,expsheet_short_description,expsheet_opened_by,expsheet_requested_for,expsheet_contract,expline_rubric,expsheet_category,expline_status,expline_currency,expline_location,expline_travelkm,expline_other_location,expline_other_location_to,expsheet_category,expline_expense,expline_miscellaneous_account_code');
			results.push(item);
			$sp.getRecordValues(item, sc, 'expline_requested_amount,expline_requested_value');
			results.push(item);

			data.date=sc.getDisplayValue('expline_date_expense');
			data.msgDateInvalid = gs.getMessage('x_hdvi2_expense.lineDate.not.valid');
			data.expline_requested_value = parseFloat(sc.getValue('expline_requested_value')).toFixed(2);
			data.expline_requested_amount = parseFloat(sc.getValue('expline_requested_amount')).toFixed(2);
			
			var sFilterRubric = sc.getValue('expsheet_category');
			data.CategRubric=sFilterRubric.charAt(0).toUpperCase() + sFilterRubric.slice(1);
			filterRubric ='category=topic^active=true^type='+sFilterRubric.charAt(0).toUpperCase() + sFilterRubric.slice(1)+'^contract_type=';
			
			data.LocationFromId = ''||sc.getValue('expline_location');
			data.LocationToId = ''||sc.getValue('expline_travelkm');
			data.RubricId = ''||sc.getValue('expline_rubric');
		}

		data.codeloga = [];
		var scCodeLoga = new GlideRecord('x_hdvi2_expense_loga_data');
		scCodeLoga.addQuery('sys_id',data.RubricId);
		scCodeLoga.query();
		while (scCodeLoga.next()) {
			var objCode = {};
			data.valCodeloga=scCodeLoga.code;
			$sp.getRecordDisplayValues(objCode, scCodeLoga, 'code,label,sys_id,maximum_amount');
			data.codeloga.push(objCode);
		}

		// Get all active expenses not paid
		var grDupValue = new GlideRecord('x_hdvi2_expense_line');
		data.arrDuplicated = [];
		grDupValue.addQuery('active', true);
		grDupValue.addQuery('expense.requested_for', data.uId);
		grDupValue.addQuery('sys_id','!=' ,sc.getValue('expline_sys_id'));
		grDupValue.query();
		while(grDupValue.next()) {
			data.arrDuplicated.push(grDupValue.getDisplayValue('active')+grDupValue.getValue('rubric')+grDupValue.getValue('date_expense')+grDupValue.getValue('requested_value')+grDupValue.getValue('requested_amount')+grDupValue.expense.requested_for);
		}
		//console.log(data.arrDuplicated);
		
		return results;
	}
	
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>h40009222</sys_created_by>
        <sys_created_on>2020-02-16 12:36:48</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>2a280738db8b4410f5e2174b06961964</sys_id>
        <sys_mod_count>1721</sys_mod_count>
        <sys_name>hvs_widget_expense</sys_name>
        <sys_package display_value="Expense Management" source="x_hdvi2_expense">50e8c3d7dbea0090f5e2174b06961954</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Expense Management">50e8c3d7dbea0090f5e2174b06961954</sys_scope>
        <sys_update_name>sp_widget_2a280738db8b4410f5e2174b06961964</sys_update_name>
        <sys_updated_by>h40009222</sys_updated_by>
        <sys_updated_on>2020-09-28 13:17:30</sys_updated_on>
        <template><![CDATA[ <div ng-if="data.uId != 'user_id8a21e682dbb6ff80bbe25c88f4961984'">
 		<sp-widget widget="c.data.Attachment" />
 </div>
<p/>
<div class="panel panel-primary" >
 <div class="panel-heading">${expense.label.modification_detail} : <b>{{c.data.items[0].expsheet_number}}</b></div>
 <div class="panel-primary">
   <table class="table table-striped table-responsive">
     <tr>
       <td class="thead text-nowrap">
      	<label>${expense.label.opened_by} :</label>
     		<input readonly class="form-control" ng-change="SetChangeTrue()" ng-model="expOpenBy" value="{{c.data.items[0].expsheet_expOpenBy}}" type="text">
       </td>
      <td class="thead text-nowrap">
     		<label for="expReqFor">${expense.label.requested_for} :</label>
     		<input readonly class="form-control" ng-change="SetChangeTrue()" ng-model="expReqFor" value="{{c.data.items[0].expsheet_requested_for}}" type="text">
       </td>
     </tr>
     <tr>
       <td class="thead text-nowrap" colspan="2">
      	<label for="expContract">${expense.label.Contract} :</label>
     		<input readonly class="form-control" ng-change="SetChangeTrue()" ng-model="expContract" value="{{c.data.items[0].expsheet_contract}}" type="text">
       </td>
     </tr>
     <tr>
       <td class="thead text-nowrap" colspan="2">
         <label for="expDesc">${expense.label.short_description} :</label>
         <input id="expDesc" class="form-control" ng-change="SetChangeTrue()" ng-model="expDesc" value="{{c.data.items[0].expsheet_short_description}}" type="text">
       </td>
     </tr>
     <tr>
       <td class="thead text-nowrap" colspan="2">
        <label for="expDate">${expense.label.date} : </label>
     		<input class="form-control" placeholder="dd-MM-yyyy" ng-change="SetChangeTrue()" ng-model="expDate" Value="{{data.date}}" id="expDate" type="date">
       </td>
     </tr>
     <tr>
       <td class="thead text-nowrap" colspan=2>
         <div ng-if="data.CategRubric == 'Standard'">
           <label for="Rubric">${expense.label.LogaRubric} :</label>
           <sn-record-picker readonly field="Rubric" table="'x_hdvi2_expense_loga_data'" display-field="'label'" value-field="'sys_id'" search-fields="'label'" page-size="15" default-query="'{{c.data.FilterRubric}}'"></sn-record-picker>
         </div>
         <!-- display selected category if Loga Rubric = Divers -->
         <div ng-if="data.items[0].expline_miscellaneous_account_code != '' && data.CategDiversNbChar > 1">
           <!--label for="CategDivers">${expense.label.CategoryDivers} :</label-->
           <input readonly class="form-control" ng-model="CategDivers" Value="{{c.data.items[0].expsheet_short_description}}" id="CategDivers" type="text">
         </div>
         <!-- ************************************************* -->
         <div ng-if="data.CategRubric == 'Training'">
           <label for="Rubric">${expense.label.LogaRubric} :</label>
           <sn-record-picker readonly field="Rubric" table="'x_hdvi2_expense_loga_data'" display-field="'label'" value-field="'sys_id'" search-fields="'label'" page-size="15" default-query="'{{c.data.FilterRubric}}'"></sn-record-picker>
         </div>         <!-- KM Inter Sites -->
         
         <div ng-if="data.codeloga[0].code!='79C' && data.codeloga[0].code!='809' && data.codeloga[0].code!='855' && (data.codeloga[0].code == '800' && data.RubricId != '3eae6cd5db831c50011e177e16961978')">
           <label style="padding-top:8px;" id="labelReqAmount" for="expReqAmount">${expense.label.RequestedAmount} :</label>
           <input id="expReqAmount" class="form-control" ng-change="SetChangeTrue()" ng-model="expAmount" value="{{data.expline_requested_amount}}" type="text">
         </div>
         <div ng-if="data.codeloga[0].code=='D01'">
           <label style="padding-top:8px;" id="labelReqAmount" for="expReqAmount">${expense.label.RequestedAmount} :</label>
           <input id="expReqAmount" class="form-control" ng-change="SetChangeTrue()" ng-model="expAmount" value="{{data.expline_requested_amount}}" type="text">
         </div>
         <div ng-if="data.codeloga[0].code=='855' || (data.codeloga[0].code == '800' && data.RubricId == '3eae6cd5db831c50011e177e16961978')">
           <label style="padding-top:8px;" id="labelReqAmount" for="expReqAmount">${expense.label.RequestedAmount} :</label>
           <input readonly id="expReqAmount" class="form-control" ng-change="SetChangeTrue()" ng-model="expAmount" value="{{data.expline_requested_amount}}" type="text">
         </div>

         <!-- KM Inter Sites -->
         <div ng-if="data.codeloga[0].code=='79C' && data.codeloga[0].sys_id=='fbc37b13dbee0090f5e2174b06961948'">
           <label style="padding-top:8px;" id="labelReqValue" for="expReqValue">${expense.label.RequestedValue} :</label>
           <input id="expReqValue" readonly class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" ng-model="expValue" value="{{data.expline_requested_value}}" type="number">
           <label style="padding-top:8px;" id="labelLocFrom" for="location_from">${expense.label.LocationFrom} :</label>
           <sn-record-picker id="location_from" field="location_from" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'locations'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
           <label style="padding-top:8px;" id="labelLocTo" for="location_to">${expense.label.LocationTo} :</label>
           <sn-record-picker id="location_to" field="location_to" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'to'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
      		 <label style="padding-top:8px;display:none;" id="labelOtherLoc" for="expOtherLoc">${expense.label.OtherLocation} :</label>
     			 <input style="display:none;" readonly class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLoc" ng-model="expOtherLoc" value="{{c.data.items[0].other_location}}" type="text">
         </div>  

         <div ng-if="data.codeloga[0].code=='809' && data.codeloga[0].sys_id=='9805f444db44149009b962a916961908'">
           <label style="padding-top:8px;" id="labelReqValue" for="expReqValue">${expense.label.RequestedValue} :</label>
           <input id="expReqValue" readonly class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" ng-model="expValue" value="{{data.expline_requested_value}}" type="number">
           <label style="padding-top:8px;" id="labelLocFrom" for="location_from">${expense.label.LocationFrom} :</label>
           <sn-record-picker id="location_from" field="location_from" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'locations'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
           <label style="padding-top:8px;" id="labelLocTo" for="location_to">${expense.label.LocationTo} :</label>
           <sn-record-picker id="location_to" field="location_to" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'to'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
      		 <label style="padding-top:8px;display:none;" id="labelOtherLoc" for="expOtherLoc">${expense.label.OtherLocation} :</label>
     			 <input style="display:none;" readonly class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLoc" ng-model="expOtherLoc" value="{{c.data.items[0].other_location}}" type="text">
         </div>  

         <!-- KM Hors Sites -->
         <div ng-if="data.codeloga[0].code=='79C' && data.codeloga[0].sys_id=='edc49704dbd3c050f5e2174b06961901' && data.items[0].expline_other_location!=''">
           <label style="padding-top:8px;" id="labelReqValue" for="expReqValue">${expense.label.RequestedValue} :</label>
           <input id="expReqValue" class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" ng-model="expValue" value="{{data.expline_requested_value}}" type="number">
           <!--label style="padding-top:8px;" id="labelLocFrom" for="location_from">${expense.label.LocationFrom} :</label>
           <sn-record-picker id="location_from" field="location_from" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'locations'" page-size="15" default-query="'km=0'" ></sn-record-picker>
						-->
      		 <label style="padding-top:8px;" id="labelOtherLoc" for="expOtherLoc">${expense.label.LocationFrom} :</label>
     			 <input class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLoc" ng-model="expOtherLoc" value="{{c.data.items[0].other_location}}" type="text">
           <label style="padding-top:8px;" id="labelOtherLocTo" for="expOtherLocTo">${expense.label.LocationTo} :</label>
     			 <input class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLocTo" ng-model="expOtherLocTo" value="{{c.data.items[0].other_location_to}}" type="text">
           <!--sn-record-picker style="display:none;" id="location_to" field="location_to" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'to'" page-size="15" default-query="'km=0'" ></sn-record-picker>
					-->
         </div>  
         <div ng-if="data.codeloga[0].code=='809' && data.codeloga[0].sys_id=='e8e4b084db44149009b962a916961906' && data.items[0].expline_other_location!=''">
           <label style="padding-top:8px;" id="labelReqValue" for="expReqValue">${expense.label.RequestedValue} :</label>
           <input id="expReqValue" class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" ng-model="expValue" value="{{data.expline_requested_value}}" type="number">
           <!--label style="padding-top:8px;" id="labelLocFrom" for="location_from">${expense.label.LocationFrom} :</label>
           <sn-record-picker id="location_from" field="location_from" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'locations'" page-size="15" default-query="'km=0'" ></sn-record-picker>
						-->
      		 <label style="padding-top:8px;" id="labelOtherLoc" for="expOtherLoc">${expense.label.LocationFrom} :</label>
     			 <input class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLoc" ng-model="expOtherLoc" value="{{c.data.items[0].other_location}}" type="text">
           <label style="padding-top:8px;" id="labelOtherLocTo" for="expOtherLocTo">${expense.label.LocationTo} :</label>
     			 <input class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLocTo" ng-model="expOtherLocTo" value="{{c.data.items[0].other_location_to}}" type="text">
           <!--sn-record-picker style="display:none;" id="location_to" field="location_to" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'to'" page-size="15" default-query="'km=0'" ></sn-record-picker>
					-->
         </div>  
         
         <div ng-if="data.codeloga[0].code=='79C' && data.codeloga[0].sys_id=='edc49704dbd3c050f5e2174b06961901' && data.items[0].expline_other_location==''">
           <label style="padding-top:8px;" id="labelReqValue" for="expReqValue">${expense.label.RequestedValue} :</label>
           <input id="expReqValue" class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" ng-model="expValue" value="{{data.expline_requested_value}}" type="number">
           <label style="padding-top:8px;" id="labelLocFrom" for="location_from">${expense.label.LocationFrom} :</label>
           <sn-record-picker id="location_from" field="location_from" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'locations'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
           <label style="padding-top:8px;display:none;" id="labelLocTo" for="location_to">${expense.label.LocationTo} :</label>
           <sn-record-picker style="display:none;" id="location_to" field="location_to" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'to'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
      		 <label style="padding-top:8px;color:#ff0000;" id="labelOtherLoc" for="expOtherLoc">${expense.label.OtherLocation} :</label>
     			 <input class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLoc" ng-model="expOtherLoc" value="{{c.data.items[0].other_location}}" type="text">
         </div>  
         <div ng-if="data.codeloga[0].code=='809' && data.codeloga[0].sys_id=='e8e4b084db44149009b962a916961906' && data.items[0].expline_other_location==''">
           <label style="padding-top:8px;" id="labelReqValue" for="expReqValue">${expense.label.RequestedValue} :</label>
           <input id="expReqValue" class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" ng-model="expValue" value="{{data.expline_requested_value}}" type="number">
           <label style="padding-top:8px;" id="labelLocFrom" for="location_from">${expense.label.LocationFrom} :</label>
           <sn-record-picker id="location_from" field="location_from" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'locations'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
           <label style="padding-top:8px;display:none;" id="labelLocTo" for="location_to">${expense.label.LocationTo} :</label>
           <sn-record-picker style="display:none;" id="location_to" field="location_to" table="'x_hdvi2_expense_expense_travel_km'" display-field="'locations'" value-field="'sys_id'" search-fields="'to'" page-size="15" default-query="'km=0^locationsNOT LIKEHôpital^toNOT LIKEHôpital'" ></sn-record-picker>
      		 <label style="padding-top:8px;color:#ff0000;" id="labelOtherLoc" for="expOtherLoc">${expense.label.OtherLocation} :</label>
     			 <input class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLoc" ng-model="expOtherLoc" value="{{c.data.items[0].other_location}}" type="text">
         </div>  
  
         <div style="position:relative;" ng-if="data.codeloga[0].code!='79C' && data.codeloga[0].code!='809' && !1==1">
      		<label style="padding-top:8px;" id="labelOtherLoc" for="expOtherLoc">${expense.label.OtherLocation} :</label>
     			<input class="form-control ng-binding ng-scope" ng-change="SetChangeTrue()" id= "expOtherLoc" ng-model="expOtherLoc" value="{{c.data.items[0].other_location}}" type="text">
         </div>  
       </td> 
   </table>

<div>
    <table align="right" style="padding-top:20px; padding-right:0px;">
      <tr><td><span>&nbsp;</span></td></tr>
      <tr> 
       <td>
         <div class="panel-primary">
      	  <label for="close_expline"></label>
          <a id="close_expline" href="javascript:void(0)" ng-click="buttonCloseExpenseEdit()" data-dismiss="modal" class="pull-right_expense panel panel-heading panel-primary" style="border-color: #a4282d; background-color: #b92d33;">
              ${expense.label.button_close}
          </a>
         </div>
       </td>
       <td style="width:20px;">
       </td>
       <td>
         <div class="panel-primary">
          <label for="save_expline"></label>
          <a id="save_expline" style="visibility:display;" href="javascript:void(0)" ng-click="buttonSaveExpenseEdit()" class="pull-right_expense panel panel-heading panel-primary"><!--  -->
              ${expense.label.button_save}
          </a>
         </div>
       </td>
       <td style="width:20px;">
       </td>
      </tr>
      <tr><td><span>&nbsp;</span></td></tr>
    </table>
 </div>
 </div>
</div>
<div class="pointer ng-binding ng-scope" style="visibility:hidden;">
  <input id="setchanged" ng-model="setchanged" class="ng-binding ng-scope" type="text" >
  <input ng-model="expline_sysid" type="text">
  <input ng-model="valCodeloga" type="text">
</div>

]]></template>
    </sp_widget>
</record_update>
