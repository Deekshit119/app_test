<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>true</applies_req_item>
        <applies_sc_task>true</applies_sc_task>
        <applies_target_record>true</applies_target_record>
        <applies_to>set</applies_to>
        <cat_item/>
        <cat_variable>IO:ee7688fddbb64890f5e2174b06961985</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>HVS Check Amount Input</name>
        <order/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
   if (isLoading || newValue == '') {
      return;
   }
	
	var sInputAmount = newValue;
	var iInputAmount = parseFloat(sInputAmount);

	if(iInputAmount < 0 || iInputAmount>=10000 || isNaN(iInputAmount)) {
		getMessage('expense.modal.warning', function(modalTitle) {			
			getMessage('expense.rubric_meal.amount.control', function(msg) {
				if (typeof spModal != 'undefined') {
					spModal.open({
						title: modalTitle,
						message: msg,
						buttons: [
							{label:'OK', primary: true}
						],
					backdrop: 'static'
					}).then(function(){
						return;
					});
				}			
			});	
		});
		g_form.setValue('sr_requested_amount','');
		return;
	}
	
  	g_form.setValue('sr_requested_amount',parseFloat(sInputAmount));

	g_form.getReference('sr_rubrique_loga', doGetCode);
	g_form.getReference('sr_rubrique_loga', doGetAmount);

	if(g_form.getValue("sr_loga_code") == '800') {
		g_form.getReference('sr_rubrique_loga', doGetAmount); // doGetAmount is our callback function
	}
	else if(g_form.getValue("sr_loga_code") == '855' || g_form.getValue("sr_loga_code") == '807') {
		g_form.getReference('sr_rubrique_loga', doGetAmount); // doGetAmount is our callback function
	}
	else {
		g_form.setValue('sr_location_to','');	
	}

}

function doGetAmount(rubric) { // reference is passed into callback as first arguments
	var iMaxMontant = 0 || rubric.maximum_amount;
	var sInputAmount = g_form.getValue('sr_requested_amount');
	var iInputAmount = parseFloat(sInputAmount);

	//g_form.addInfoMessage(iMontant);
	if(iMaxMontant != 0 && iInputAmount > iMaxMontant){
		g_form.setValue('sr_requested_amount',iMaxMontant);
		g_form.setReadonly('sr_requested_amount',false);
	}
}

function doGetCode(rubric) { // reference is passed into callback as first arguments
      var sCode = rubric.code;
	  g_form.setValue('sr_loga_code',sCode);
}
]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>h40009222</sys_created_by>
        <sys_created_on>2020-02-28 09:00:43</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>99d8c0f4db5bc010011e177e16961904</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>HVS Check Amount Input</sys_name>
        <sys_overrides display_value="">global</sys_overrides>
        <sys_package display_value="Expense Management" source="x_hdvi2_expense">50e8c3d7dbea0090f5e2174b06961954</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Expense Management">50e8c3d7dbea0090f5e2174b06961954</sys_scope>
        <sys_update_name>catalog_script_client_99d8c0f4db5bc010011e177e16961904</sys_update_name>
        <sys_updated_by>h40009222</sys_updated_by>
        <sys_updated_on>2020-03-09 12:06:23</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <variable_set display_value="Lignes de dÃ©penses SR">a048ae60db4b0410f5e2174b069619dc</variable_set>
        <view/>
    </catalog_script_client>
</record_update>
